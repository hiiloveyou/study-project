#指定securityManager的authenticator实现
# 使用多Realm认证
authenticator = org.apache.shiro.authc.pam.ModularRealmAuthenticator
securityManager.authenticator = $authenticator

#指定securityManager.authenticator的authenticationStrategy
# 多Realm认证的策略，全部Realm认证通过，第一个认证通过，或者至少又一个认证通过
#AtLeastOneSuccessfulStrategy  FirstSuccessfulStrategy  AllSuccessfulStrategy
allSuccessfulStrategy = org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $allSuccessfulStrategy

#使用多Realm授权
authorizer = org.apache.shiro.authz.ModularRealmAuthorizer
securityManager.authorizer = $authorizer

#设置授权的通配符实现，用于解析权限，如 USER:LIST
permissionResolver = org.apache.shiro.authz.permission.WildcardPermissionResolver
authorizer.permissionResolver = $permissionResolver

#自定义角色全面解析器
;rolePermissionResolver=com.github.zhangkaitao.shiro.chapter3.permission.MyRolePermissionResolver
;authorizer.rolePermissionResolver=$rolePermissionResolver

#指定多个realm，要放在认证授权之后
myRealm = com.chenyi.study.controller.shiro.MyRealm
webUserRealm = com.chenyi.study.controller.shiro.WebUserRealm
securityManager.realms = $myRealm,$webUserRealm