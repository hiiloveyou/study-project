<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenyi.study.mapper.user.RoleMapper">
    <resultMap id="BaseResultMap" type="com.chenyi.study.model.user.Role">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        <!--@Table study_role-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="lock_version" jdbcType="INTEGER" property="lockVersion"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        id, create_name, create_id, create_time, update_name, update_id, update_time, lock_version,
        role_name, `status`
    </sql>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        update study_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="create_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="update_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="lock_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.lockVersion,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        update study_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="create_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createName != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateName != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="lock_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.lockVersion != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.lockVersion,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.roleName != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.status != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        insert into study_role
                (create_name, create_id, create_time, update_name, update_id, update_time, lock_version,
                 role_name, `status`)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.createName,jdbcType=VARCHAR}, #{item.createId,jdbcType=BIGINT},
             #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateName,jdbcType=VARCHAR}, #{item.updateId,jdbcType=BIGINT},
             #{item.updateTime,jdbcType=TIMESTAMP},
             #{item.lockVersion,jdbcType=INTEGER}, #{item.roleName,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.chenyi.study.model.user.Role"
            useGeneratedKeys="true">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        insert into study_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            create_name,
            create_id,
            create_time,
            update_name,
            update_id,
            update_time,
            lock_version,
            role_name,
            `status`,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{createName,jdbcType=VARCHAR},
            #{createId,jdbcType=BIGINT},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateName,jdbcType=VARCHAR},
            #{updateId,jdbcType=BIGINT},
            #{updateTime,jdbcType=TIMESTAMP},
            #{lockVersion,jdbcType=INTEGER},
            #{roleName,jdbcType=VARCHAR},
            #{status,jdbcType=VARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            create_name  = #{createName,jdbcType=VARCHAR},
            create_id    = #{createId,jdbcType=BIGINT},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_name  = #{updateName,jdbcType=VARCHAR},
            update_id    = #{updateId,jdbcType=BIGINT},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            lock_version = #{lockVersion,jdbcType=INTEGER},
            role_name    = #{roleName,jdbcType=VARCHAR},
            `status`     = #{status,jdbcType=VARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.chenyi.study.model.user.Role" useGeneratedKeys="true">
        <!--@mbg.generated generated on Fri Oct 30 00:52:50 CST 2020.-->
        insert into study_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createName != null and createName != ''">
                create_name,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateName != null and updateName != ''">
                update_name,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="lockVersion != null">
                lock_version,
            </if>
            <if test="roleName != null and roleName != ''">
                role_name,
            </if>
            <if test="status != null and status != ''">
                `status`,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createName != null and createName != ''">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateName != null and updateName != ''">
                #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lockVersion != null">
                #{lockVersion,jdbcType=INTEGER},
            </if>
            <if test="roleName != null and roleName != ''">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="createName != null and createName != ''">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateName != null and updateName != ''">
                update_name = #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lockVersion != null">
                lock_version = #{lockVersion,jdbcType=INTEGER},
            </if>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="findVOByUserId" resultType="com.chenyi.study.vo.RoleVO">
        select role.*
        from study_role role
                     left join study_user_role_relation surr on role.id = surr.role_id
        where surr.user_id = #{userId};
    </select>
</mapper>