<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenyi.study.mapper.user.UserGroupMapper">
  <resultMap id="BaseResultMap" type="com.chenyi.study.model.user.UserGroup">
    <!--@mbg.generated-->
    <!--@Table study_user_group-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="lock_version" jdbcType="INTEGER" property="lockVersion" />
    <result column="user_group_name" jdbcType="VARCHAR" property="userGroupName" />
    <result column="user_group_code" jdbcType="VARCHAR" property="userGroupCode" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="principal" jdbcType="VARCHAR" property="principal" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, create_name, create_id, create_time, update_name, update_id, update_time, lock_version, 
    user_group_name, user_group_code, description, principal
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from study_user_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from study_user_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.chenyi.study.model.user.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into study_user_group (create_name, create_id, create_time, 
      update_name, update_id, update_time, 
      lock_version, user_group_name, user_group_code, 
      description, principal)
    values (#{createName,jdbcType=VARCHAR}, #{createId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateName,jdbcType=VARCHAR}, #{updateId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{lockVersion,jdbcType=INTEGER}, #{userGroupName,jdbcType=VARCHAR}, #{userGroupCode,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.chenyi.study.model.user.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into study_user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createName != null and createName != ''">
        create_name,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateName != null and updateName != ''">
        update_name,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lockVersion != null">
        lock_version,
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        user_group_name,
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        user_group_code,
      </if>
      <if test="description != null and description != ''">
        description,
      </if>
      <if test="principal != null and principal != ''">
        principal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createName != null and createName != ''">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null and updateName != ''">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockVersion != null">
        #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        #{userGroupName,jdbcType=VARCHAR},
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        #{userGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null and description != ''">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="principal != null and principal != ''">
        #{principal,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chenyi.study.model.user.UserGroup">
    <!--@mbg.generated-->
    update study_user_group
    <set>
      <if test="createName != null and createName != ''">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null and updateName != ''">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockVersion != null">
        lock_version = #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        user_group_name = #{userGroupName,jdbcType=VARCHAR},
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        user_group_code = #{userGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null and description != ''">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="principal != null and principal != ''">
        principal = #{principal,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chenyi.study.model.user.UserGroup">
    <!--@mbg.generated-->
    update study_user_group
    set create_name = #{createName,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      lock_version = #{lockVersion,jdbcType=INTEGER},
      user_group_name = #{userGroupName,jdbcType=VARCHAR},
      user_group_code = #{userGroupCode,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update study_user_group
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="lock_version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lockVersion,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="user_group_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userGroupName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_group_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userGroupCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="principal = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.principal,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update study_user_group
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="lock_version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.lockVersion != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.lockVersion,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_group_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userGroupName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userGroupName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_group_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userGroupCode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userGroupCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.description != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="principal = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.principal != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.principal,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into study_user_group
    (create_name, create_id, create_time, update_name, update_id, update_time, lock_version, 
      user_group_name, user_group_code, description, principal)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.createName,jdbcType=VARCHAR}, #{item.createId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateName,jdbcType=VARCHAR}, #{item.updateId,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.lockVersion,jdbcType=INTEGER}, #{item.userGroupName,jdbcType=VARCHAR}, #{item.userGroupCode,jdbcType=VARCHAR}, 
        #{item.description,jdbcType=VARCHAR}, #{item.principal,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.chenyi.study.model.user.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into study_user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      create_name,
      create_id,
      create_time,
      update_name,
      update_id,
      update_time,
      lock_version,
      user_group_name,
      user_group_code,
      description,
      principal,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{createName,jdbcType=VARCHAR},
      #{createId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateName,jdbcType=VARCHAR},
      #{updateId,jdbcType=BIGINT},
      #{updateTime,jdbcType=TIMESTAMP},
      #{lockVersion,jdbcType=INTEGER},
      #{userGroupName,jdbcType=VARCHAR},
      #{userGroupCode,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR},
      #{principal,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      create_name = #{createName,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      lock_version = #{lockVersion,jdbcType=INTEGER},
      user_group_name = #{userGroupName,jdbcType=VARCHAR},
      user_group_code = #{userGroupCode,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.chenyi.study.model.user.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into study_user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createName != null and createName != ''">
        create_name,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateName != null and updateName != ''">
        update_name,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lockVersion != null">
        lock_version,
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        user_group_name,
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        user_group_code,
      </if>
      <if test="description != null and description != ''">
        description,
      </if>
      <if test="principal != null and principal != ''">
        principal,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createName != null and createName != ''">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null and updateName != ''">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockVersion != null">
        #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        #{userGroupName,jdbcType=VARCHAR},
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        #{userGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null and description != ''">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="principal != null and principal != ''">
        #{principal,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="createName != null and createName != ''">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null and updateName != ''">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockVersion != null">
        lock_version = #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="userGroupName != null and userGroupName != ''">
        user_group_name = #{userGroupName,jdbcType=VARCHAR},
      </if>
      <if test="userGroupCode != null and userGroupCode != ''">
        user_group_code = #{userGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null and description != ''">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="principal != null and principal != ''">
        principal = #{principal,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>